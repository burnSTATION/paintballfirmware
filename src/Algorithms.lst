

HI-TECH Software PICC Macro Assembler V9.50PL2
                                                      Tue Aug 11 23:56:15 2009


     1                           	processor	16F648A
     2                           	opt	pw 79
     3                           	psect	text0,local,class=CODE,delta=2
     4                           	psect	text2,local,class=CODE,delta=2
     5                           	psect	text4,local,class=CODE,delta=2
     6                           	psect	rbss_1,global,class=BANK1,space=1,delta=
      +                          1
     7                           	psect	temp,global,ovrld,class=BANK0,space=1,de
      +                          lta=1
     8  0000                     
     9  0000                     
    10  0000                     
    11  0000                     
    12  0000                     
    13  0000                     
    14  0000                     
    15  0000                     
    16  0000                     
    17  0000                     
    18  0000                     _TRIGGER_ISUP$debounce	set	?_TRIGGER_ISUP
    19                           
    20                           	psect	text0
    21  0448                     _TRIGGER_ISUP
    22                           ;	_end assigned to ?a_TRIGGER_ISUP+0
    23  0000                     _TRIGGER_ISUP$end	set	?a_TRIGGER_ISUP
    24                           ;Algorithms.c: 51: BOOL TRIGGER_ISUP(WORD debou
      +                          nce)
    25  0448  0183               	clrf	3	;select bank 0
    26  0449  1C86               	btfss	6,1
    27  044A  3400               	retlw	0
    28                           ;Algorithms.c: 56: {
    29  044B  138B               	bcf	11,7
    30                           ;Algorithms.c: 58: end = G_TickCount+debounce;
    31  044C  084A               	movf	?_TRIGGER_ISUP+1,w
    32  044D  00F1               	movwf	btemp+1
    33  044E  0849               	movf	?_TRIGGER_ISUP,w
    34  044F  00F0               	movwf	btemp
    35  0450  01F2               	clrf	btemp+2
    36  0451  01F3               	clrf	btemp+3
    37  0452  0833               	movf	_G_TickCount,w	;volatile
    38  0453  0770               	addwf	btemp,w
    39  0454  00CB               	movwf	?a_TRIGGER_ISUP
    40  0455  0871               	movf	btemp+1,w
    41  0456  00CC               	movwf	?a_TRIGGER_ISUP+1
    42  0457  0834               	movf	_G_TickCount+1,w	;volatile
    43  0458  1803               	btfsc	3,0
    44  0459  0F34               	incfsz	_G_TickCount+1,w	;volatile
    45  045A  07CC               	addwf	?a_TRIGGER_ISUP+1
    46  045B  0872               	movf	btemp+2,w
    47  045C  00CD               	movwf	?a_TRIGGER_ISUP+2
    48  045D  0835               	movf	_G_TickCount+2,w	;volatile
    49  045E  1803               	btfsc	3,0
    50  045F  0F35               	incfsz	_G_TickCount+2,w	;volatile
    51  0460  07CD               	addwf	?a_TRIGGER_ISUP+2
    52  0461  0873               	movf	btemp+3,w
    53  0462  00CE               	movwf	?a_TRIGGER_ISUP+3
    54  0463  0836               	movf	_G_TickCount+3,w	;volatile
    55  0464  1803               	btfsc	3,0
    56  0465  0F36               	incfsz	_G_TickCount+3,w	;volatile
    57  0466  07CE               	addwf	?a_TRIGGER_ISUP+3
    58                           ;Algorithms.c: 59: while (G_TickCount < end)
    59  0467                     l3
    60  0467  084E               	movf	?a_TRIGGER_ISUP+3,w
    61  0468  0236               	subwf	_G_TickCount+3,w	;volatile
    62  0469  1D03               	btfss	3,2
    63  046A  2C75               	goto	u35
    64  046B  084D               	movf	?a_TRIGGER_ISUP+2,w
    65  046C  0235               	subwf	_G_TickCount+2,w	;volatile
    66  046D  1D03               	btfss	3,2
    67  046E  2C75               	goto	u35
    68  046F  084C               	movf	?a_TRIGGER_ISUP+1,w
    69  0470  0234               	subwf	_G_TickCount+1,w	;volatile
    70  0471  1D03               	btfss	3,2
    71  0472  2C75               	goto	u35
    72  0473  084B               	movf	?a_TRIGGER_ISUP,w
    73  0474  0233               	subwf	_G_TickCount,w	;volatile
    74  0475                     u35
    75                           ;Algorithms.c: 60: {
    76  0475  178B               	bsf	11,7
    77                           ;Algorithms.c: 62: asm("nop");
    78  0476  0000               	nop	;#
    79  0477  1803               	btfsc	3,0
    80  0478  3401               	retlw	1
    81                           ;Algorithms.c: 63: asm("clrwdt");
    82  0479  0064               	clrwdt	;#
    83                           ;Algorithms.c: 64: if ((RB1 == 0)) return 0;
    84  047A  1C86               	btfss	6,1
    85  047B  3400               	retlw	0
    86                           ;Algorithms.c: 65: (GIE = 0);
    87  047C  138B               	bcf	11,7
    88  047D  2C67               	goto	l3
    89  047E                     _TRIGGER_FIRSTPULL
    90                           ;Algorithms.c: 78: BOOL TRIGGER_FIRSTPULL(void)
    91  047E  1683               	bsf	3,5
    92  047F  1303               	bcf	3,6	;carry unused
    93  0480  083C               	movf	(_G_Trigger_FP+3)^(0+128),w
    94  0481  043B               	iorwf	(_G_Trigger_FP+2)^(0+128),w
    95  0482  043A               	iorwf	(_G_Trigger_FP+1)^(0+128),w
    96  0483  0439               	iorwf	_G_Trigger_FP^(0+128),w
    97                           ;Algorithms.c: 89: {
    98  0484  1283               	bcf	3,5
    99  0485  1903               	btfsc	3,2
   100  0486  2CA1               	goto	L4
   101  0487  1D86               	btfss	6,3
   102  0488  2C8D               	goto	l9
   103                           ;Algorithms.c: 91: {
   104  0489  082B               	movf	_G_Debounce,w
   105  048A  00C9               	movwf	?_TRIGGER_ISUP
   106  048B  082C               	movf	_G_Debounce+1,w
   107  048C  2C94               	goto	L3
   108                           ;Algorithms.c: 94: {
   109                           ;Algorithms.c: 96: }
   110  048D                     l9
   111                           ;Algorithms.c: 98: else
   112  048D  1683               	bsf	3,5
   113  048E  0828               	movf	F425^(0+128),w
   114  048F  1283               	bcf	3,5
   115  0490  00C9               	movwf	?_TRIGGER_ISUP
   116  0491  1683               	bsf	3,5
   117  0492  0829               	movf	(F425+1)^(0+128),w
   118  0493  1283               	bcf	3,5
   119  0494                     L3
   120  0494  00CA               	movwf	?_TRIGGER_ISUP+1
   121  0495  2448               	fcall	_TRIGGER_ISUP
   122  0496  00F0               	movwf	btemp
   123  0497  01F1               	clrf	btemp+1
   124  0498  0471               	iorwf	btemp+1,w
   125                           ;Algorithms.c: 102: {
   126  0499  1683               	bsf	3,5
   127  049A  1903               	btfsc	3,2
   128  049B  2D8B               	goto	L5
   129  049C  01B9               	clrf	_G_Trigger_FP^(0+128)
   130  049D  01BA               	clrf	(_G_Trigger_FP+1)^(0+128)
   131  049E  01BB               	clrf	(_G_Trigger_FP+2)^(0+128)
   132  049F  01BC               	clrf	(_G_Trigger_FP+3)^(0+128)
   133                           ;Algorithms.c: 104: }
   134  04A0  2D8A               	goto	l13
   135                           ;Algorithms.c: 107: else if ((RB1 == 0))
   136  04A1                     L4
   137  04A1  1886               	btfsc	6,1
   138  04A2  2D8A               	goto	l13
   139                           ;Algorithms.c: 108: {
   140  04A3  158A  2096  118A   	fcall	_ACTION
   141                           ;Algorithms.c: 112: G_Trigger_FP = 1;
   142  04A6  1683               	bsf	3,5
   143  04A7  01B9               	clrf	_G_Trigger_FP^(0+128)
   144  04A8  0AB9               	incf	_G_Trigger_FP^(0+128)
   145  04A9  01BA               	clrf	(_G_Trigger_FP+1)^(0+128)
   146  04AA  01BB               	clrf	(_G_Trigger_FP+2)^(0+128)
   147  04AB  01BC               	clrf	(_G_Trigger_FP+3)^(0+128)
   148                           ;Algorithms.c: 115: (GIE = 0);
   149  04AC  138B               	bcf	11,7
   150                           ;Algorithms.c: 116: bps = (float)(1000000/(G_Ti
      +                          ckCount-G_Last_Pull));
   151  04AD  082D               	movf	_G_Last_Pull^(0+128),w
   152  04AE  1283               	bcf	3,5
   153  04AF  0233               	subwf	_G_TickCount,w	;volatile
   154  04B0  00F4               	movwf	btemp+4
   155  04B1  0834               	movf	_G_TickCount+1,w	;volatile
   156  04B2  00F5               	movwf	btemp+5
   157  04B3  1683               	bsf	3,5
   158  04B4  082E               	movf	(_G_Last_Pull+1)^(0+128),w
   159  04B5  1C03               	btfss	3,0
   160  04B6  0F2E               	incfsz	(_G_Last_Pull+1)^(0+128),w
   161  04B7  02F5               	subwf	btemp+5
   162  04B8  1283               	bcf	3,5
   163  04B9  0835               	movf	_G_TickCount+2,w	;volatile
   164  04BA  00F6               	movwf	btemp+6
   165  04BB  1683               	bsf	3,5
   166  04BC  082F               	movf	(_G_Last_Pull+2)^(0+128),w
   167  04BD  1C03               	btfss	3,0
   168  04BE  0F2F               	incfsz	(_G_Last_Pull+2)^(0+128),w
   169  04BF  02F6               	subwf	btemp+6
   170  04C0  1283               	bcf	3,5
   171  04C1  0836               	movf	_G_TickCount+3,w	;volatile
   172  04C2  00F7               	movwf	btemp+7
   173  04C3  1683               	bsf	3,5
   174  04C4  0830               	movf	(_G_Last_Pull+3)^(0+128),w
   175  04C5  1C03               	btfss	3,0
   176  04C6  0F30               	incfsz	(_G_Last_Pull+3)^(0+128),w
   177  04C7  02F7               	subwf	btemp+7
   178  04C8  3040               	movlw	64
   179  04C9  00F0               	movwf	btemp
   180  04CA  3042               	movlw	66
   181  04CB  00F1               	movwf	btemp+1
   182  04CC  300F               	movlw	15
   183  04CD  00F2               	movwf	btemp+2
   184  04CE  3000               	movlw	0
   185  04CF  01F3               	clrf	btemp+3
   186  04D0  118A  2775         	fcall	lldiv
   187  04D2  118A  26F7         	fcall	lltoft
   188  04D4  0870               	movf	btemp,w
   189  04D5  1683               	bsf	3,5
   190  04D6  00AA               	movwf	F428^(0+128)
   191  04D7  0871               	movf	btemp+1,w
   192  04D8  00AB               	movwf	(F428+1)^(0+128)
   193  04D9  0872               	movf	btemp+2,w
   194  04DA  00AC               	movwf	(F428+2)^(0+128)
   195                           ;Algorithms.c: 117: (GIE = 1);
   196  04DB  178B               	bsf	11,7
   197                           ;Algorithms.c: 118: asm("nop");
   198  04DC  0000               	nop	;#
   199                           ;Algorithms.c: 119: G_BPS = (BYTE)(bps);
   200  04DD  082A               	movf	F428^(0+128),w
   201  04DE  00F0               	movwf	btemp
   202  04DF  082B               	movf	(F428+1)^(0+128),w
   203  04E0  00F1               	movwf	btemp+1
   204  04E1  082C               	movf	(F428+2)^(0+128),w
   205  04E2  00F2               	movwf	btemp+2
   206  04E3  118A  26CF  118A   	fcall	fttol
   207  04E6  0870               	movf	btemp,w
   208  04E7  00C5               	movwf	_G_BPS^(0+128)
   209                           ;Algorithms.c: 122: (GIE = 0);
   210  04E8  138B               	bcf	11,7
   211                           ;Algorithms.c: 123: G_Last_Pull = G_TickCount;
   212  04E9  1283               	bcf	3,5
   213  04EA  0833               	movf	_G_TickCount,w	;volatile
   214  04EB  1683               	bsf	3,5
   215  04EC  00AD               	movwf	_G_Last_Pull^(0+128)
   216  04ED  1283               	bcf	3,5
   217  04EE  0834               	movf	_G_TickCount+1,w	;volatile
   218  04EF  1683               	bsf	3,5
   219  04F0  00AE               	movwf	(_G_Last_Pull+1)^(0+128)
   220  04F1  1283               	bcf	3,5
   221  04F2  0835               	movf	_G_TickCount+2,w	;volatile
   222  04F3  1683               	bsf	3,5
   223  04F4  00AF               	movwf	(_G_Last_Pull+2)^(0+128)
   224  04F5  1283               	bcf	3,5
   225  04F6  0836               	movf	_G_TickCount+3,w	;volatile
   226  04F7  1683               	bsf	3,5
   227  04F8  00B0               	movwf	(_G_Last_Pull+3)^(0+128)
   228                           ;Algorithms.c: 124: (GIE = 1);
   229  04F9  178B               	bsf	11,7
   230                           ;Algorithms.c: 125: asm("nop");
   231  04FA  0000               	nop	;#
   232                           ;Algorithms.c: 128: if ((RB3 == 0))
   233  04FB  1283               	bcf	3,5
   234  04FC  1986               	btfsc	6,3
   235  04FD  2D24               	goto	l15
   236                           ;Algorithms.c: 129: {
   237  04FE  3008               	movlw	8
   238  04FF  1683               	bsf	3,5
   239  0500  0245               	subwf	_G_BPS^(0+128),w
   240  0501  1803               	btfsc	3,0
   241  0502  2D15               	goto	l16
   242                           ;Algorithms.c: 131: {
   243  0503  01A0               	clrf	F426^(0+128)
   244                           ;Algorithms.c: 133: ambdebounce = ((WORD)(G_Deb
      +                          ounce+G_AMB));
   245  0504  1283               	bcf	3,5
   246  0505  082C               	movf	_G_Debounce+1,w
   247  0506  00F1               	movwf	btemp+1
   248  0507  082B               	movf	_G_Debounce,w
   249  0508  00F0               	movwf	btemp
   250  0509  0827               	movf	_G_AMB,w
   251  050A  07F0               	addwf	btemp
   252  050B  1803               	btfsc	3,0
   253  050C  0AF1               	incf	btemp+1
   254  050D  0828               	movf	_G_AMB+1,w
   255  050E  07F1               	addwf	btemp+1
   256  050F  0870               	movf	btemp,w
   257  0510  1683               	bsf	3,5
   258  0511  00A8               	movwf	F425^(0+128)
   259  0512  0871               	movf	btemp+1,w
   260  0513  00A9               	movwf	(F425+1)^(0+128)
   261                           ;Algorithms.c: 134: }
   262  0514  2D24               	goto	l15
   263  0515                     l16
   264                           ;Algorithms.c: 135: else
   265  0515  0AA0               	incf	F426^(0+128)
   266                           ;Algorithms.c: 138: if (ambcount > 1)
   267  0516  3002               	movlw	2
   268  0517  0220               	subwf	F426^(0+128),w
   269                           ;Algorithms.c: 139: {
   270  0518  1283               	bcf	3,5
   271  0519  1C03               	btfss	3,0
   272  051A  2D25               	goto	L6
   273  051B  082B               	movf	_G_Debounce,w
   274  051C  1683               	bsf	3,5
   275  051D  00A8               	movwf	F425^(0+128)
   276  051E  1283               	bcf	3,5
   277  051F  082C               	movf	_G_Debounce+1,w
   278  0520  1683               	bsf	3,5
   279  0521  00A9               	movwf	(F425+1)^(0+128)
   280                           ;Algorithms.c: 141: ambcount = 2;
   281  0522  3002               	movlw	2
   282  0523  00A0               	movwf	F426^(0+128)
   283  0524                     l15
   284                           ;Algorithms.c: 142: }
   285  0524  1283               	bcf	3,5
   286  0525                     L6
   287  0525  0823               	movf	_G_Mode,w	;volatile
   288  0526  1D03               	btfss	3,2
   289  0527  2D88               	goto	l19
   290                           ;Algorithms.c: 149: {
   291  0528  1683               	bsf	3,5
   292  0529  08A3               	movf	_G_Hybrid^(0+128)
   293  052A  1D03               	btfss	3,2
   294  052B  2D3B               	goto	l20
   295                           ;Algorithms.c: 152: {
   296  052C  3005               	movlw	5
   297  052D  0245               	subwf	_G_BPS^(0+128),w
   298  052E  1C03               	btfss	3,0
   299  052F  2D3A               	goto	l21
   300                           ;Algorithms.c: 154: {
   301  0530  0AA1               	incf	F427^(0+128)
   302                           ;Algorithms.c: 156: if (hybridcount > 2)
   303  0531  3003               	movlw	3
   304  0532  0221               	subwf	F427^(0+128),w
   305  0533  1C03               	btfss	3,0
   306  0534  2D3B               	goto	l20
   307                           ;Algorithms.c: 157: {
   308  0535  01A3               	clrf	_G_Hybrid^(0+128)
   309  0536  0AA3               	incf	_G_Hybrid^(0+128)
   310                           ;Algorithms.c: 159: hybridcount = 3;
   311  0537  3003               	movlw	3
   312  0538  00A1               	movwf	F427^(0+128)
   313                           ;Algorithms.c: 160: }
   314  0539  2D3B               	goto	l20
   315  053A                     l21
   316                           ;Algorithms.c: 162: else
   317  053A  01A1               	clrf	F427^(0+128)
   318  053B                     l20
   319                           ;Algorithms.c: 165: }
   320  053B  1283               	bcf	3,5
   321  053C  0822               	movf	_G_FMD,w
   322  053D  3A04               	xorlw	4
   323  053E  1D03               	btfss	3,2
   324  053F  2D88               	goto	l19
   325                           ;Algorithms.c: 169: {
   326  0540  1683               	bsf	3,5
   327  0541  0845               	movf	_G_BPS^(0+128),w
   328  0542  00F0               	movwf	btemp
   329  0543  118A  263C         	fcall	lbtoft
   330  0545  309A               	movlw	154
   331  0546  00F3               	movwf	btemp+3
   332  0547  3019               	movlw	25
   333  0548  00F4               	movwf	btemp+4
   334  0549  303F               	movlw	63
   335  054A  00F5               	movwf	btemp+5
   336  054B  118A  268E         	fcall	ftmul
   337  054D  118A  26CF  118A   	fcall	fttol
   338  0550  0870               	movf	btemp,w
   339  0551  0745               	addwf	_G_BPS^(0+128),w
   340  0552  00A2               	movwf	F430^(0+128)
   341                           ;Algorithms.c: 174: if (G_RampIt == 1)
   342  0553  0B25               	decfsz	_G_RampIt^(0+128),w
   343  0554  2D69               	goto	l25
   344                           ;Algorithms.c: 175: {
   345  0555  3006               	movlw	6
   346  0556  0245               	subwf	_G_BPS^(0+128),w
   347  0557  1C03               	btfss	3,0
   348  0558  2D5C               	goto	l26
   349                           ;Algorithms.c: 177: {
   350  0559  0822               	movf	F430^(0+128),w
   351  055A  00C6               	movwf	_G_Current_ROF^(0+128)	;volatile
   352                           ;Algorithms.c: 179: }
   353  055B  2D78               	goto	l28
   354  055C                     l26
   355                           ;Algorithms.c: 180: else
   356  055C  01A5               	clrf	_G_RampIt^(0+128)
   357                           ;Algorithms.c: 186: (GIE = 0);
   358  055D  138B               	bcf	11,7
   359                           ;Algorithms.c: 187: G_Current_ROF = G_ROF;
   360  055E  1283               	bcf	3,5
   361  055F  0826               	movf	_G_ROF,w
   362  0560  1683               	bsf	3,5
   363  0561  00C6               	movwf	_G_Current_ROF^(0+128)	;volatile
   364                           ;Algorithms.c: 188: G_LimitROF = (RB2 == 0);
   365  0562  3000               	movlw	0
   366  0563  1283               	bcf	3,5
   367  0564  1D06               	btfss	6,2
   368  0565  3001               	movlw	1
   369  0566  1683               	bsf	3,5
   370  0567  00A4               	movwf	_G_LimitROF^(0+128)
   371  0568  2D76               	goto	L2
   372                           ;Algorithms.c: 189: (GIE = 1);
   373                           ;Algorithms.c: 190: asm("nop");
   374                           ;Algorithms.c: 191: }
   375  0569                     l25
   376                           ;Algorithms.c: 193: else if (G_Ramping == 1)
   377  0569  0B26               	decfsz	_G_Ramping^(0+128),w
   378  056A  2D78               	goto	l28
   379                           ;Algorithms.c: 194: {
   380  056B  3008               	movlw	8
   381  056C  0245               	subwf	_G_BPS^(0+128),w
   382  056D  1C03               	btfss	3,0
   383  056E  2D78               	goto	l28
   384                           ;Algorithms.c: 197: {
   385  056F  01A5               	clrf	_G_RampIt^(0+128)
   386  0570  0AA5               	incf	_G_RampIt^(0+128)
   387                           ;Algorithms.c: 201: (GIE = 0);
   388  0571  138B               	bcf	11,7
   389                           ;Algorithms.c: 202: G_Current_ROF = G_BPS;
   390  0572  0845               	movf	_G_BPS^(0+128),w
   391  0573  00C6               	movwf	_G_Current_ROF^(0+128)	;volatile
   392                           ;Algorithms.c: 203: G_LimitROF = 1;
   393  0574  01A4               	clrf	_G_LimitROF^(0+128)
   394  0575  0AA4               	incf	_G_LimitROF^(0+128)
   395  0576                     L2
   396                           ;Algorithms.c: 204: (GIE = 1);
   397  0576  178B               	bsf	11,7
   398                           ;Algorithms.c: 205: asm("nop");
   399  0577  0000               	nop	;#
   400  0578                     l28
   401                           ;Algorithms.c: 206: }
   402  0578  1283               	bcf	3,5
   403  0579  1D06               	btfss	6,2
   404  057A  2D7F               	goto	u230
   405  057B  1683               	bsf	3,5
   406  057C  08C8               	movf	_G_Eye_On^(0+128)
   407  057D  1D03               	btfss	3,2
   408  057E  2D88               	goto	l19
   409  057F                     u230
   410                           ;Algorithms.c: 210: {
   411  057F  1683               	bsf	3,5
   412  0580  0846               	movf	_G_Current_ROF^(0+128),w	;volatile
   413  0581  1283               	bcf	3,5
   414  0582  0226               	subwf	_G_ROF,w
   415  0583  1803               	btfsc	3,0
   416  0584  2D88               	goto	l19
   417                           ;Algorithms.c: 212: G_Current_ROF = G_ROF;
   418  0585  0826               	movf	_G_ROF,w
   419  0586  1683               	bsf	3,5
   420  0587  00C6               	movwf	_G_Current_ROF^(0+128)	;volatile
   421  0588                     l19
   422                           ;Algorithms.c: 213: }
   423  0588  3001               	movlw	1
   424  0589  2E25               	goto	l7
   425  058A                     l13
   426                           ;Algorithms.c: 217: }
   427  058A  1683               	bsf	3,5
   428  058B                     L5
   429  058B  0B23               	decfsz	_G_Hybrid^(0+128),w
   430  058C  2DCC               	goto	L7
   431                           ;Algorithms.c: 221: {
   432  058D  1283               	bcf	3,5
   433  058E  0822               	movf	_G_FMD,w
   434  058F  3A02               	xorlw	2
   435  0590  1D03               	btfss	3,2
   436  0591  2D9A               	goto	l34
   437                           ;Algorithms.c: 223: {
   438  0592  1886               	btfsc	6,1
   439  0593  2D98               	goto	l35
   440                           ;Algorithms.c: 225: {
   441  0594  3002               	movlw	2
   442  0595  1683               	bsf	3,5
   443  0596  00A7               	movwf	_G_ShotBuffer^(0+128)
   444                           ;Algorithms.c: 227: }
   445  0597  2D9A               	goto	l34
   446  0598                     l35
   447                           ;Algorithms.c: 228: else
   448  0598  1683               	bsf	3,5
   449  0599  01A7               	clrf	_G_ShotBuffer^(0+128)
   450  059A                     l34
   451                           ;Algorithms.c: 231: }
   452  059A  3040               	movlw	64
   453  059B  00F0               	movwf	btemp
   454  059C  3042               	movlw	66
   455  059D  00F1               	movwf	btemp+1
   456  059E  300F               	movlw	15
   457  059F  00F2               	movwf	btemp+2
   458  05A0  01F3               	clrf	btemp+3
   459  05A1  0870               	movf	btemp,w
   460  05A2  1683               	bsf	3,5
   461  05A3  0731               	addwf	_G_Last_Shot^(0+128),w
   462  05A4  00F4               	movwf	btemp+4
   463  05A5  0832               	movf	(_G_Last_Shot+1)^(0+128),w
   464  05A6  00F5               	movwf	btemp+5
   465  05A7  0871               	movf	btemp+1,w
   466  05A8  1803               	btfsc	3,0
   467  05A9  0F71               	incfsz	btemp+1,w
   468  05AA  07F5               	addwf	btemp+5
   469  05AB  0833               	movf	(_G_Last_Shot+2)^(0+128),w
   470  05AC  00F6               	movwf	btemp+6
   471  05AD  0872               	movf	btemp+2,w
   472  05AE  1803               	btfsc	3,0
   473  05AF  0F72               	incfsz	btemp+2,w
   474  05B0  07F6               	addwf	btemp+6
   475  05B1  0834               	movf	(_G_Last_Shot+3)^(0+128),w
   476  05B2  00F7               	movwf	btemp+7
   477  05B3  0873               	movf	btemp+3,w
   478  05B4  1803               	btfsc	3,0
   479  05B5  0F73               	incfsz	btemp+3,w
   480  05B6  07F7               	addwf	btemp+7
   481  05B7  1283               	bcf	3,5
   482  05B8  0836               	movf	_G_TickCount+3,w	;volatile
   483  05B9  0277               	subwf	btemp+7,w
   484  05BA  1D03               	btfss	3,2
   485  05BB  2DC6               	goto	u285
   486  05BC  0835               	movf	_G_TickCount+2,w	;volatile
   487  05BD  0276               	subwf	btemp+6,w
   488  05BE  1D03               	btfss	3,2
   489  05BF  2DC6               	goto	u285
   490  05C0  0834               	movf	_G_TickCount+1,w	;volatile
   491  05C1  0275               	subwf	btemp+5,w
   492  05C2  1D03               	btfss	3,2
   493  05C3  2DC6               	goto	u285
   494  05C4  0833               	movf	_G_TickCount,w	;volatile
   495  05C5  0274               	subwf	btemp+4,w
   496  05C6                     u285
   497                           ;Algorithms.c: 236: {
   498  05C6  1683               	bsf	3,5
   499  05C7  1803               	btfsc	3,0
   500  05C8  2DCC               	goto	L7
   501  05C9  01A3               	clrf	_G_Hybrid^(0+128)
   502                           ;Algorithms.c: 238: hybridcount = 0;
   503  05CA  01A1               	clrf	F427^(0+128)
   504                           ;Algorithms.c: 239: G_ShotBuffer = 0;
   505  05CB  01A7               	clrf	_G_ShotBuffer^(0+128)
   506                           ;Algorithms.c: 240: }
   507  05CC                     L7
   508  05CC  08A6               	movf	_G_Ramping^(0+128)
   509  05CD  1903               	btfsc	3,2
   510  05CE  2E24               	goto	l38
   511  05CF  0B25               	decfsz	_G_RampIt^(0+128),w
   512  05D0  2E24               	goto	l38
   513                           ;Algorithms.c: 244: {
   514  05D1  0845               	movf	_G_BPS^(0+128),w
   515  05D2  00F0               	movwf	btemp
   516  05D3  01F1               	clrf	btemp+1
   517  05D4  1003               	bcf	3,0
   518  05D5  0DF0               	rlf	btemp
   519  05D6  0DF1               	rlf	btemp+1
   520  05D7  0870               	movf	btemp,w
   521  05D8  00F4               	movwf	btemp+4
   522  05D9  0871               	movf	btemp+1,w
   523  05DA  00F5               	movwf	btemp+5
   524  05DB  3000               	movlw	0
   525  05DC  1BF5               	btfsc	btemp+5,7
   526  05DD  30FF               	movlw	255
   527  05DE  00F6               	movwf	btemp+6
   528  05DF  00F7               	movwf	btemp+7
   529  05E0  3040               	movlw	64
   530  05E1  00F0               	movwf	btemp
   531  05E2  3042               	movlw	66
   532  05E3  00F1               	movwf	btemp+1
   533  05E4  300F               	movlw	15
   534  05E5  00F2               	movwf	btemp+2
   535  05E6  3000               	movlw	0
   536  05E7  01F3               	clrf	btemp+3
   537  05E8  118A  273F  118A   	fcall	aldiv
   538  05EB  0870               	movf	btemp,w
   539  05EC  00C5               	movwf	?a_TRIGGER_FIRSTPULL
   540  05ED  0871               	movf	btemp+1,w
   541  05EE  00C6               	movwf	?a_TRIGGER_FIRSTPULL+1
   542  05EF  0872               	movf	btemp+2,w
   543  05F0  00C7               	movwf	?a_TRIGGER_FIRSTPULL+2
   544  05F1  0873               	movf	btemp+3,w
   545  05F2  00C8               	movwf	?a_TRIGGER_FIRSTPULL+3
   546  05F3  1683               	bsf	3,5
   547  05F4  082D               	movf	_G_Last_Pull^(0+128),w
   548  05F5  1283               	bcf	3,5
   549  05F6  0233               	subwf	_G_TickCount,w	;volatile
   550  05F7  00F0               	movwf	btemp
   551  05F8  0834               	movf	_G_TickCount+1,w	;volatile
   552  05F9  00F1               	movwf	btemp+1
   553  05FA  1683               	bsf	3,5
   554  05FB  082E               	movf	(_G_Last_Pull+1)^(0+128),w
   555  05FC  1C03               	btfss	3,0
   556  05FD  0F2E               	incfsz	(_G_Last_Pull+1)^(0+128),w
   557  05FE  02F1               	subwf	btemp+1
   558  05FF  1283               	bcf	3,5
   559  0600  0835               	movf	_G_TickCount+2,w	;volatile
   560  0601  00F2               	movwf	btemp+2
   561  0602  1683               	bsf	3,5
   562  0603  082F               	movf	(_G_Last_Pull+2)^(0+128),w
   563  0604  1C03               	btfss	3,0
   564  0605  0F2F               	incfsz	(_G_Last_Pull+2)^(0+128),w
   565  0606  02F2               	subwf	btemp+2
   566  0607  1283               	bcf	3,5
   567  0608  0836               	movf	_G_TickCount+3,w	;volatile
   568  0609  00F3               	movwf	btemp+3
   569  060A  1683               	bsf	3,5
   570  060B  0830               	movf	(_G_Last_Pull+3)^(0+128),w
   571  060C  1C03               	btfss	3,0
   572  060D  0F30               	incfsz	(_G_Last_Pull+3)^(0+128),w
   573  060E  02F3               	subwf	btemp+3
   574  060F  1303               	bcf	3,6	;carry unused
   575  0610  1283               	bcf	3,5
   576  0611  0848               	movf	?a_TRIGGER_FIRSTPULL+3,w
   577  0612  0273               	subwf	btemp+3,w
   578  0613  1D03               	btfss	3,2
   579  0614  2E1F               	goto	u325
   580  0615  0847               	movf	?a_TRIGGER_FIRSTPULL+2,w
   581  0616  0272               	subwf	btemp+2,w
   582  0617  1D03               	btfss	3,2
   583  0618  2E1F               	goto	u325
   584  0619  0846               	movf	?a_TRIGGER_FIRSTPULL+1,w
   585  061A  0271               	subwf	btemp+1,w
   586  061B  1D03               	btfss	3,2
   587  061C  2E1F               	goto	u325
   588  061D  0845               	movf	?a_TRIGGER_FIRSTPULL,w
   589  061E  0270               	subwf	btemp,w
   590  061F                     u325
   591  061F  1803               	btfsc	3,0
   592  0620  2E24               	goto	l38
   593                           ;Algorithms.c: 246: {
   594  0621  1683               	bsf	3,5
   595  0622  01A7               	clrf	_G_ShotBuffer^(0+128)
   596  0623  0AA7               	incf	_G_ShotBuffer^(0+128)
   597  0624                     l38
   598                           ;Algorithms.c: 248: }
   599  0624  3000               	movlw	0
   600                           ;Algorithms.c: 252: }
   601  0625                     l7
   602  0625  1283               	bcf	3,5
   603  0626  0008               	return	;uses W
   604                           
   605                           	psect	text2
   606  02BD                     _Cycle
   607                           ;	_dwell assigned to ?a_Cycle+0
   608  0000                     _Cycle$dwell	set	?a_Cycle
   609                           ;Algorithms.c: 258: void Cycle(void)
   610  02BD  138B               	bcf	11,7
   611                           ;Algorithms.c: 264: if (_DIP1_ISSET_PTR() && ((
      +                          G_TickCount > G_Last_Shot+(1000000*8)) || !G_La
      +                          st_Shot))
   612  02BE  1683               	bsf	3,5
   613  02BF  1303               	bcf	3,6	;carry unused
   614  02C0  083E               	movf	(__DIP1_ISSET_PTR+1)^(0+128),w
   615  02C1  1283               	bcf	3,5
   616  02C2  00D2               	movwf	code_ptr+1
   617  02C3  1683               	bsf	3,5
   618  02C4  083D               	movf	__DIP1_ISSET_PTR^(0+128),w
   619  02C5  1283               	bcf	3,5
   620  02C6  118A  20A0  118A   	fcall	string_table
   621  02C9  3800               	iorlw	0
   622  02CA  1903               	btfsc	3,2
   623  02CB  2B07               	goto	l41
   624  02CC  01F0               	clrf	btemp
   625  02CD  3012               	movlw	18
   626  02CE  00F1               	movwf	btemp+1
   627  02CF  307A               	movlw	122
   628  02D0  00F2               	movwf	btemp+2
   629  02D1  01F3               	clrf	btemp+3
   630  02D2  0870               	movf	btemp,w
   631  02D3  1683               	bsf	3,5
   632  02D4  0731               	addwf	_G_Last_Shot^(0+128),w
   633  02D5  00F4               	movwf	btemp+4
   634  02D6  0832               	movf	(_G_Last_Shot+1)^(0+128),w
   635  02D7  00F5               	movwf	btemp+5
   636  02D8  0871               	movf	btemp+1,w
   637  02D9  1803               	btfsc	3,0
   638  02DA  0F71               	incfsz	btemp+1,w
   639  02DB  07F5               	addwf	btemp+5
   640  02DC  0833               	movf	(_G_Last_Shot+2)^(0+128),w
   641  02DD  00F6               	movwf	btemp+6
   642  02DE  0872               	movf	btemp+2,w
   643  02DF  1803               	btfsc	3,0
   644  02E0  0F72               	incfsz	btemp+2,w
   645  02E1  07F6               	addwf	btemp+6
   646  02E2  0834               	movf	(_G_Last_Shot+3)^(0+128),w
   647  02E3  00F7               	movwf	btemp+7
   648  02E4  0873               	movf	btemp+3,w
   649  02E5  1803               	btfsc	3,0
   650  02E6  0F73               	incfsz	btemp+3,w
   651  02E7  07F7               	addwf	btemp+7
   652  02E8  1283               	bcf	3,5
   653  02E9  0836               	movf	_G_TickCount+3,w	;volatile
   654  02EA  0277               	subwf	btemp+7,w
   655  02EB  1D03               	btfss	3,2
   656  02EC  2AF7               	goto	u345
   657  02ED  0835               	movf	_G_TickCount+2,w	;volatile
   658  02EE  0276               	subwf	btemp+6,w
   659  02EF  1D03               	btfss	3,2
   660  02F0  2AF7               	goto	u345
   661  02F1  0834               	movf	_G_TickCount+1,w	;volatile
   662  02F2  0275               	subwf	btemp+5,w
   663  02F3  1D03               	btfss	3,2
   664  02F4  2AF7               	goto	u345
   665  02F5  0833               	movf	_G_TickCount,w	;volatile
   666  02F6  0274               	subwf	btemp+4,w
   667  02F7                     u345
   668  02F7  1C03               	btfss	3,0
   669  02F8  2B00               	goto	u370
   670  02F9  1683               	bsf	3,5
   671  02FA  0834               	movf	(_G_Last_Shot+3)^(0+128),w
   672  02FB  0433               	iorwf	(_G_Last_Shot+2)^(0+128),w
   673  02FC  0432               	iorwf	(_G_Last_Shot+1)^(0+128),w
   674  02FD  0431               	iorwf	_G_Last_Shot^(0+128),w
   675  02FE  1D03               	btfss	3,2
   676  02FF  2B07               	goto	l41
   677  0300                     u370
   678                           ;Algorithms.c: 265: {
   679  0300  178B               	bsf	11,7
   680                           ;Algorithms.c: 267: asm("nop");
   681  0301  0000               	nop	;#
   682                           ;Algorithms.c: 268: dwell = 35000;
   683  0302  30B8               	movlw	184
   684  0303  1283               	bcf	3,5
   685  0304  00BF               	movwf	?a_Cycle
   686  0305  3088               	movlw	136
   687  0306  2B0D               	goto	L8
   688                           ;Algorithms.c: 269: }
   689  0307                     l41
   690                           ;Algorithms.c: 270: else
   691  0307  178B               	bsf	11,7
   692                           ;Algorithms.c: 273: asm("nop");
   693  0308  0000               	nop	;#
   694                           ;Algorithms.c: 274: dwell = G_Dwell;
   695  0309  1283               	bcf	3,5
   696  030A  082D               	movf	_G_Dwell,w
   697  030B  00BF               	movwf	?a_Cycle
   698  030C  082E               	movf	_G_Dwell+1,w
   699  030D                     L8
   700  030D  00C0               	movwf	?a_Cycle+1
   701                           ;Algorithms.c: 275: }
   702  030E  178B               	bsf	11,7
   703                           ;Algorithms.c: 277: asm("nop");
   704  030F  0000               	nop	;#
   705                           ;Algorithms.c: 281: (GIE = 0);
   706  0310  138B               	bcf	11,7
   707                           ;Algorithms.c: 282: if ((G_LimitROF == 1) || (G
      +                          _Eye_On == 0))
   708  0311  1683               	bsf	3,5
   709  0312  0B24               	decfsz	_G_LimitROF^(0+128),w
   710  0313  2B15               	goto	u381
   711  0314  2B18               	goto	u400
   712  0315                     u381
   713  0315  08C8               	movf	_G_Eye_On^(0+128)
   714  0316  1D03               	btfss	3,2
   715  0317  2B4A               	goto	l43
   716  0318                     u400
   717                           ;Algorithms.c: 283: {
   718  0318  178B               	bsf	11,7
   719                           ;Algorithms.c: 285: asm("nop");
   720  0319  0000               	nop	;#
   721                           ;Algorithms.c: 286: (GIE = 0);
   722  031A  138B               	bcf	11,7
   723                           ;Algorithms.c: 287: G_Next_Shot = G_TickCount+(
      +                          1000000/G_Current_ROF);
   724  031B  0846               	movf	_G_Current_ROF^(0+128),w	;volatile
   725  031C  00F4               	movwf	btemp+4
   726  031D  01F5               	clrf	btemp+5
   727  031E  01F6               	clrf	btemp+6
   728  031F  01F7               	clrf	btemp+7
   729  0320  3040               	movlw	64
   730  0321  00F0               	movwf	btemp
   731  0322  3042               	movlw	66
   732  0323  00F1               	movwf	btemp+1
   733  0324  300F               	movlw	15
   734  0325  00F2               	movwf	btemp+2
   735  0326  3000               	movlw	0
   736  0327  01F3               	clrf	btemp+3
   737  0328  118A  273F  118A   	fcall	aldiv
   738  032B  0833               	movf	_G_TickCount,w	;volatile
   739  032C  0770               	addwf	btemp,w
   740  032D  00F4               	movwf	btemp+4
   741  032E  0871               	movf	btemp+1,w
   742  032F  00F5               	movwf	btemp+5
   743  0330  0834               	movf	_G_TickCount+1,w	;volatile
   744  0331  1803               	btfsc	3,0
   745  0332  0F34               	incfsz	_G_TickCount+1,w	;volatile
   746  0333  07F5               	addwf	btemp+5
   747  0334  0872               	movf	btemp+2,w
   748  0335  00F6               	movwf	btemp+6
   749  0336  0835               	movf	_G_TickCount+2,w	;volatile
   750  0337  1803               	btfsc	3,0
   751  0338  0F35               	incfsz	_G_TickCount+2,w	;volatile
   752  0339  07F6               	addwf	btemp+6
   753  033A  0873               	movf	btemp+3,w
   754  033B  00F7               	movwf	btemp+7
   755  033C  0836               	movf	_G_TickCount+3,w	;volatile
   756  033D  1803               	btfsc	3,0
   757  033E  0F36               	incfsz	_G_TickCount+3,w	;volatile
   758  033F  07F7               	addwf	btemp+7
   759  0340  0874               	movf	btemp+4,w
   760  0341  1683               	bsf	3,5
   761  0342  00B5               	movwf	_G_Next_Shot^(0+128)
   762  0343  0875               	movf	btemp+5,w
   763  0344  00B6               	movwf	(_G_Next_Shot+1)^(0+128)
   764  0345  0876               	movf	btemp+6,w
   765  0346  00B7               	movwf	(_G_Next_Shot+2)^(0+128)
   766  0347  0877               	movf	btemp+7,w
   767  0348  00B8               	movwf	(_G_Next_Shot+3)^(0+128)
   768  0349  2B52               	goto	L9
   769                           ;Algorithms.c: 288: (GIE = 1);
   770                           ;Algorithms.c: 289: asm("nop");
   771                           ;Algorithms.c: 290: }
   772  034A                     l43
   773                           ;Algorithms.c: 291: else
   774  034A  138B               	bcf	11,7
   775                           ;Algorithms.c: 294: (GIE = 1);
   776  034B  178B               	bsf	11,7
   777                           ;Algorithms.c: 295: asm("nop");
   778  034C  0000               	nop	;#
   779                           ;Algorithms.c: 296: (GIE = 0);
   780  034D  138B               	bcf	11,7
   781                           ;Algorithms.c: 297: G_Next_Shot = 0;
   782  034E  01B5               	clrf	_G_Next_Shot^(0+128)
   783  034F  01B6               	clrf	(_G_Next_Shot+1)^(0+128)
   784  0350  01B7               	clrf	(_G_Next_Shot+2)^(0+128)
   785  0351  01B8               	clrf	(_G_Next_Shot+3)^(0+128)
   786  0352                     L9
   787                           ;Algorithms.c: 298: (GIE = 1);
   788  0352  178B               	bsf	11,7
   789                           ;Algorithms.c: 299: asm("nop");
   790  0353  0000               	nop	;#
   791                           ;Algorithms.c: 300: }
   792  0354  178B               	bsf	11,7
   793                           ;Algorithms.c: 302: asm("nop");
   794  0355  0000               	nop	;#
   795                           ;Algorithms.c: 305: (RB7 = 1);
   796  0356  1283               	bcf	3,5
   797  0357  1786               	bsf	6,7
   798                           ;Algorithms.c: 306: wait(dwell);
   799  0358  083F               	movf	?a_Cycle,w
   800  0359  00C6               	movwf	?_wait
   801  035A  0840               	movf	?a_Cycle+1,w
   802  035B  00C7               	movwf	?_wait+1
   803  035C  01C8               	clrf	?_wait+2
   804  035D  01C9               	clrf	?_wait+3
   805  035E  158A  20B6  118A   	fcall	_wait
   806                           ;Algorithms.c: 307: (RB7 = 0);
   807  0361  1386               	bcf	6,7
   808                           ;Algorithms.c: 310: (GIE = 0);
   809  0362  138B               	bcf	11,7
   810                           ;Algorithms.c: 311: G_Last_Shot = G_TickCount;
   811  0363  0833               	movf	_G_TickCount,w	;volatile
   812  0364  1683               	bsf	3,5
   813  0365  00B1               	movwf	_G_Last_Shot^(0+128)
   814  0366  1283               	bcf	3,5
   815  0367  0834               	movf	_G_TickCount+1,w	;volatile
   816  0368  1683               	bsf	3,5
   817  0369  00B2               	movwf	(_G_Last_Shot+1)^(0+128)
   818  036A  1283               	bcf	3,5
   819  036B  0835               	movf	_G_TickCount+2,w	;volatile
   820  036C  1683               	bsf	3,5
   821  036D  00B3               	movwf	(_G_Last_Shot+2)^(0+128)
   822  036E  1283               	bcf	3,5
   823  036F  0836               	movf	_G_TickCount+3,w	;volatile
   824  0370  1683               	bsf	3,5
   825  0371  00B4               	movwf	(_G_Last_Shot+3)^(0+128)
   826                           ;Algorithms.c: 312: (GIE = 1);
   827  0372  178B               	bsf	11,7
   828                           ;Algorithms.c: 313: asm("nop");
   829  0373  0000               	nop	;#
   830                           ;Algorithms.c: 316: G_ShotBuffer--;
   831  0374  03A7               	decf	_G_ShotBuffer^(0+128)
   832                           ;Algorithms.c: 317: }
   833  0375  1283               	bcf	3,5
   834  0376  0008               	return	;W free
   835  0377                     _Cycle_BreakBeam
   836                           ;	_end assigned to ?a_Cycle_BreakBeam+0
   837  0000                     _Cycle_BreakBeam$end	set	?a_Cycle_BreakBeam
   838                           ;Algorithms.c: 323: void Cycle_BreakBeam(void)
   839  0377  138B               	bcf	11,7
   840                           ;Algorithms.c: 329: if (G_TickCount > G_Next_Sh
      +                          ot)
   841  0378  1283               	bcf	3,5
   842  0379  1303               	bcf	3,6	;carry unused
   843  037A  0836               	movf	_G_TickCount+3,w	;volatile
   844  037B  1683               	bsf	3,5
   845  037C  0238               	subwf	(_G_Next_Shot+3)^(0+128),w
   846  037D  1D03               	btfss	3,2
   847  037E  2B8F               	goto	u415
   848  037F  1283               	bcf	3,5
   849  0380  0835               	movf	_G_TickCount+2,w	;volatile
   850  0381  1683               	bsf	3,5
   851  0382  0237               	subwf	(_G_Next_Shot+2)^(0+128),w
   852  0383  1D03               	btfss	3,2
   853  0384  2B8F               	goto	u415
   854  0385  1283               	bcf	3,5
   855  0386  0834               	movf	_G_TickCount+1,w	;volatile
   856  0387  1683               	bsf	3,5
   857  0388  0236               	subwf	(_G_Next_Shot+1)^(0+128),w
   858  0389  1D03               	btfss	3,2
   859  038A  2B8F               	goto	u415
   860  038B  1283               	bcf	3,5
   861  038C  0833               	movf	_G_TickCount,w	;volatile
   862  038D  1683               	bsf	3,5
   863  038E  0235               	subwf	_G_Next_Shot^(0+128),w
   864  038F                     u415
   865                           ;Algorithms.c: 330: {
   866  038F  178B               	bsf	11,7
   867                           ;Algorithms.c: 332: asm("nop");
   868  0390  0000               	nop	;#
   869  0391  1803               	btfsc	3,0
   870  0392  2C46               	goto	l45
   871                           ;Algorithms.c: 335: if (G_Eye_On)
   872  0393  08C8               	movf	_G_Eye_On^(0+128)
   873  0394  1903               	btfsc	3,2
   874  0395  2C42               	goto	l47
   875                           ;Algorithms.c: 336: {
   876  0396  138B               	bcf	11,7
   877                           ;Algorithms.c: 338: if ((RB0 == 1) && !G_Eye_Wa
      +                          iting)
   878  0397  1283               	bcf	3,5
   879  0398  1C06               	btfss	6,0
   880  0399  2C08               	goto	l48
   881  039A  1683               	bsf	3,5
   882  039B  0849               	movf	_G_Eye_Waiting^(0+128),w	;volatile
   883                           ;Algorithms.c: 339: {
   884  039C  178B               	bsf	11,7
   885  039D  1D03               	btfss	3,2
   886  039E  2C09               	goto	L10
   887                           ;Algorithms.c: 341: asm("nop");
   888  039F  0000               	nop	;#
   889                           ;Algorithms.c: 343: (GIE = 0);
   890  03A0  138B               	bcf	11,7
   891                           ;Algorithms.c: 344: end = G_TickCount+G_BIP;
   892  03A1  1283               	bcf	3,5
   893  03A2  082A               	movf	_G_BIP+1,w
   894  03A3  00F1               	movwf	btemp+1
   895  03A4  0829               	movf	_G_BIP,w
   896  03A5  00F0               	movwf	btemp
   897  03A6  01F2               	clrf	btemp+2
   898  03A7  01F3               	clrf	btemp+3
   899  03A8  0833               	movf	_G_TickCount,w	;volatile
   900  03A9  0770               	addwf	btemp,w
   901  03AA  00BB               	movwf	?a_Cycle_BreakBeam
   902  03AB  0871               	movf	btemp+1,w
   903  03AC  00BC               	movwf	?a_Cycle_BreakBeam+1
   904  03AD  0834               	movf	_G_TickCount+1,w	;volatile
   905  03AE  1803               	btfsc	3,0
   906  03AF  0F34               	incfsz	_G_TickCount+1,w	;volatile
   907  03B0  07BC               	addwf	?a_Cycle_BreakBeam+1
   908  03B1  0872               	movf	btemp+2,w
   909  03B2  00BD               	movwf	?a_Cycle_BreakBeam+2
   910  03B3  0835               	movf	_G_TickCount+2,w	;volatile
   911  03B4  1803               	btfsc	3,0
   912  03B5  0F35               	incfsz	_G_TickCount+2,w	;volatile
   913  03B6  07BD               	addwf	?a_Cycle_BreakBeam+2
   914  03B7  0873               	movf	btemp+3,w
   915  03B8  00BE               	movwf	?a_Cycle_BreakBeam+3
   916  03B9  0836               	movf	_G_TickCount+3,w	;volatile
   917  03BA  1803               	btfsc	3,0
   918  03BB  0F36               	incfsz	_G_TickCount+3,w	;volatile
   919  03BC  07BE               	addwf	?a_Cycle_BreakBeam+3
   920                           ;Algorithms.c: 345: while(end > G_TickCount)
   921  03BD                     l49
   922  03BD  083E               	movf	?a_Cycle_BreakBeam+3,w
   923  03BE  0236               	subwf	_G_TickCount+3,w	;volatile
   924  03BF  1D03               	btfss	3,2
   925  03C0  2BCB               	goto	u475
   926  03C1  083D               	movf	?a_Cycle_BreakBeam+2,w
   927  03C2  0235               	subwf	_G_TickCount+2,w	;volatile
   928  03C3  1D03               	btfss	3,2
   929  03C4  2BCB               	goto	u475
   930  03C5  083C               	movf	?a_Cycle_BreakBeam+1,w
   931  03C6  0234               	subwf	_G_TickCount+1,w	;volatile
   932  03C7  1D03               	btfss	3,2
   933  03C8  2BCB               	goto	u475
   934  03C9  083B               	movf	?a_Cycle_BreakBeam,w
   935  03CA  0233               	subwf	_G_TickCount,w	;volatile
   936  03CB                     u475
   937                           ;Algorithms.c: 346: {
   938  03CB  178B               	bsf	11,7
   939                           ;Algorithms.c: 348: asm("nop");
   940  03CC  0000               	nop	;#
   941  03CD  1803               	btfsc	3,0
   942  03CE  2BD4               	goto	L11
   943                           ;Algorithms.c: 349: asm("clrwdt");
   944  03CF  0064               	clrwdt	;#
   945                           ;Algorithms.c: 350: if (!(RB0 == 1)) return;
   946  03D0  1C06               	btfss	6,0
   947  03D1  2C46               	goto	l45
   948                           ;Algorithms.c: 351: (GIE = 0);
   949  03D2  138B               	bcf	11,7
   950  03D3  2BBD               	goto	l49
   951                           ;Algorithms.c: 352: }
   952                           ;Algorithms.c: 354: asm("nop");
   953  03D4                     L11
   954                           ;Algorithms.c: 357: Cycle();
   955  03D4  22BD  118A         	fcall	_Cycle
   956                           ;Algorithms.c: 360: if (G_Next_Shot)
   957  03D6  1683               	bsf	3,5
   958  03D7  0838               	movf	(_G_Next_Shot+3)^(0+128),w
   959  03D8  0437               	iorwf	(_G_Next_Shot+2)^(0+128),w
   960  03D9  0436               	iorwf	(_G_Next_Shot+1)^(0+128),w
   961  03DA  0435               	iorwf	_G_Next_Shot^(0+128),w
   962  03DB  1903               	btfsc	3,2
   963  03DC  2BFA               	goto	l53
   964                           ;Algorithms.c: 361: {
   965  03DD  1283               	bcf	3,5
   966  03DE  082A               	movf	_G_BIP+1,w
   967  03DF  00F1               	movwf	btemp+1
   968  03E0  0829               	movf	_G_BIP,w
   969  03E1  00F0               	movwf	btemp
   970  03E2  01F2               	clrf	btemp+2
   971  03E3  01F3               	clrf	btemp+3
   972  03E4  1683               	bsf	3,5
   973  03E5  02B5               	subwf	_G_Next_Shot^(0+128)
   974  03E6  0871               	movf	btemp+1,w
   975  03E7  1803               	btfsc	3,0
   976  03E8  2BEE               	goto	u495
   977  03E9  0A71               	incf	btemp+1,w
   978  03EA  1903               	btfsc	3,2
   979  03EB  0AF2               	incf	btemp+2
   980  03EC  1903               	btfsc	3,2
   981  03ED  0AF3               	incf	btemp+3
   982  03EE                     u495
   983  03EE  02B6               	subwf	(_G_Next_Shot+1)^(0+128)
   984  03EF  0872               	movf	btemp+2,w
   985  03F0  1803               	btfsc	3,0
   986  03F1  2BF5               	goto	u496
   987  03F2  0A72               	incf	btemp+2,w
   988  03F3  1903               	btfsc	3,2
   989  03F4  0AF3               	incf	btemp+3
   990  03F5                     u496
   991  03F5  02B7               	subwf	(_G_Next_Shot+2)^(0+128)
   992  03F6  0873               	movf	btemp+3,w
   993  03F7  1C03               	btfss	3,0
   994  03F8  0A73               	incf	btemp+3,w
   995  03F9  02B8               	subwf	(_G_Next_Shot+3)^(0+128)
   996  03FA                     l53
   997                           ;Algorithms.c: 363: }
   998  03FA  0844               	movf	(__EYEPOWER_ON_PTR+1)^(0+128),w
   999  03FB  1283               	bcf	3,5
  1000  03FC  00D2               	movwf	code_ptr+1
  1001  03FD  1683               	bsf	3,5
  1002  03FE  0843               	movf	__EYEPOWER_ON_PTR^(0+128),w
  1003  03FF  1283               	bcf	3,5
  1004  0400  118A  20A0  118A   	fcall	string_table
  1005                           ;Algorithms.c: 367: (GIE = 0);
  1006  0403  138B               	bcf	11,7
  1007                           ;Algorithms.c: 368: G_Eye_Waiting = 1;
  1008  0404  3001               	movlw	1
  1009  0405  1683               	bsf	3,5
  1010  0406  00C9               	movwf	_G_Eye_Waiting^(0+128)	;volatile
  1011  0407  2C3D               	goto	l55
  1012                           ;Algorithms.c: 369: (GIE = 1);
  1013                           ;Algorithms.c: 370: asm("nop");
  1014                           ;Algorithms.c: 371: }
  1015  0408                     l48
  1016                           ;Algorithms.c: 372: else
  1017  0408  178B               	bsf	11,7
  1018  0409                     L10
  1019                           ;Algorithms.c: 375: asm("nop");
  1020  0409  0000               	nop	;#
  1021                           ;Algorithms.c: 377: (GIE = 0);
  1022  040A  138B               	bcf	11,7
  1023                           ;Algorithms.c: 378: if (G_TickCount > G_Last_Sh
      +                          ot+(1000000/2))
  1024  040B  3020               	movlw	32
  1025  040C  00F0               	movwf	btemp
  1026  040D  30A1               	movlw	161
  1027  040E  00F1               	movwf	btemp+1
  1028  040F  3007               	movlw	7
  1029  0410  00F2               	movwf	btemp+2
  1030  0411  01F3               	clrf	btemp+3
  1031  0412  0870               	movf	btemp,w
  1032  0413  1683               	bsf	3,5
  1033  0414  0731               	addwf	_G_Last_Shot^(0+128),w
  1034  0415  00F4               	movwf	btemp+4
  1035  0416  0832               	movf	(_G_Last_Shot+1)^(0+128),w
  1036  0417  00F5               	movwf	btemp+5
  1037  0418  0871               	movf	btemp+1,w
  1038  0419  1803               	btfsc	3,0
  1039  041A  0F71               	incfsz	btemp+1,w
  1040  041B  07F5               	addwf	btemp+5
  1041  041C  0833               	movf	(_G_Last_Shot+2)^(0+128),w
  1042  041D  00F6               	movwf	btemp+6
  1043  041E  0872               	movf	btemp+2,w
  1044  041F  1803               	btfsc	3,0
  1045  0420  0F72               	incfsz	btemp+2,w
  1046  0421  07F6               	addwf	btemp+6
  1047  0422  0834               	movf	(_G_Last_Shot+3)^(0+128),w
  1048  0423  00F7               	movwf	btemp+7
  1049  0424  0873               	movf	btemp+3,w
  1050  0425  1803               	btfsc	3,0
  1051  0426  0F73               	incfsz	btemp+3,w
  1052  0427  07F7               	addwf	btemp+7
  1053  0428  1283               	bcf	3,5
  1054  0429  0836               	movf	_G_TickCount+3,w	;volatile
  1055  042A  0277               	subwf	btemp+7,w
  1056  042B  1D03               	btfss	3,2
  1057  042C  2C37               	goto	u505
  1058  042D  0835               	movf	_G_TickCount+2,w	;volatile
  1059  042E  0276               	subwf	btemp+6,w
  1060  042F  1D03               	btfss	3,2
  1061  0430  2C37               	goto	u505
  1062  0431  0834               	movf	_G_TickCount+1,w	;volatile
  1063  0432  0275               	subwf	btemp+5,w
  1064  0433  1D03               	btfss	3,2
  1065  0434  2C37               	goto	u505
  1066  0435  0833               	movf	_G_TickCount,w	;volatile
  1067  0436  0274               	subwf	btemp+4,w
  1068  0437                     u505
  1069                           ;Algorithms.c: 379: {
  1070  0437  178B               	bsf	11,7
  1071                           ;Algorithms.c: 381: asm("nop");
  1072  0438  0000               	nop	;#
  1073  0439  1803               	btfsc	3,0
  1074  043A  2C3F               	goto	L12
  1075                           ;Algorithms.c: 382: G_ShotBuffer = 0;
  1076  043B  1683               	bsf	3,5
  1077  043C  01A7               	clrf	_G_ShotBuffer^(0+128)
  1078  043D                     l55
  1079                           ;Algorithms.c: 383: }
  1080  043D  178B               	bsf	11,7
  1081                           ;Algorithms.c: 385: asm("nop");
  1082  043E  0000               	nop	;#
  1083  043F                     L12
  1084                           ;Algorithms.c: 387: }
  1085  043F  178B               	bsf	11,7
  1086                           ;Algorithms.c: 389: asm("nop");
  1087  0440  0000               	nop	;#
  1088                           ;Algorithms.c: 390: }
  1089  0441  2C44               	goto	l46
  1090  0442                     l47
  1091                           ;Algorithms.c: 391: else
  1092  0442  22BD  118A         	fcall	_Cycle
  1093  0444                     l46
  1094                           ;Algorithms.c: 394: }
  1095  0444  178B               	bsf	11,7
  1096                           ;Algorithms.c: 397: asm("nop");
  1097  0445  0000               	nop	;#
  1098                           ;Algorithms.c: 398: }
  1099  0446                     l45
  1100  0446  1283               	bcf	3,5
  1101  0447  0008               	return	;W free
  1102                           
  1103                           	psect	text4
  1104  0000                     
  1105  0000                     
  1106  0000                     
  1107  0000                     
  1108  0000                     
  1109  0000                     
  1110  0000                     
  1111  0000                     
  1112  0000                     
  1113  0000                     
  1114  0000                     
  1115  0000                     
  1116  0000                     
  1117  0000                     
  1118  0000                     
  1119  0000                     
  1120  0000                     
  1121  0000                     
  1122  0000                     
  1123  0000                     
  1124  0000                     
  1125  0000                     
  1126  0000                     
  1127  0000                     
  1128  0000                     
  1129  0000                     
  1130  0000                     
  1131  0000                     
  1132  0000                     
  1133  0000                     
  1134  0000                     
  1135  0000                     
  1136  0000                     
  1137  0000                     
  1138  0000                     
  1139  0000                     
  1140  0000                     
  1141  0000                     
  1142  0000                     
  1143  0000                     
  1144  0000                     
  1145  0000                     
  1146  0000                     
  1147  0000                     
  1148  0000                     
  1149  0000                     
  1150  0000                     
  1151  0000                     
  1152  0000                     
  1153  0000                     
  1154  0000                     
  1155  0000                     
  1156  0000                     
  1157  0000                     
  1158  0000                     
  1159  0000                     
  1160  0000                     
  1161  0000                     
  1162  0000                     
  1163  0000                     
  1164  0000                     
  1165  0000                     
  1166  0000                     
  1167  0000                     
  1168  0000                     
  1169  0000                     
  1170  0000                     
  1171  0000                     
  1172  0000                     
  1173  0000                     
  1174  0000                     
  1175  0000                     
  1176  0000                     
  1177  0000                     
  1178  0000                     
  1179  0000                     
  1180  0000                     
  1181  0000                     
  1182  0000                     
  1183  0000                     
  1184  0000                     
  1185  0000                     
  1186  0000                     
  1187  0000                     
  1188  0000                     
  1189  0000                     
  1190  0000                     
  1191  0000                     
  1192  0000                     
  1193  0000                     
  1194  0000                     
  1195  0000                     
  1196  0000                     
  1197  0000                     
  1198  0000                     
  1199  0000                     
  1200  0000                     
  1201  0000                     
  1202  0000                     
  1203  0000                     
  1204  0000                     
  1205  0000                     
  1206  0000                     
  1207  0000                     
  1208  0000                     
  1209  0000                     
  1210  0000                     
  1211  0000                     
  1212  0000                     
  1213  0000                     
  1214  0000                     
  1215  0000                     
  1216  0000                     
  1217  0000                     
  1218  0000                     
  1219  0000                     
  1220  0000                     
  1221  0000                     
  1222  0000                     
  1223  0000                     
  1224  0000                     
  1225  0000                     
  1226  0000                     
  1227  0000                     
  1228  0000                     
  1229  0000                     
  1230                           
  1231                           	psect	rbss_1
  1232  00A0                     F426
  1233  00A0                     	ds	1
  1234  00A1                     F427
  1235  00A1                     	ds	1
  1236  00A2                     F430
  1237  00A2                     	ds	1
  1238  0000                     
  1239  0000                     
  1240  0000                     
  1241  0000                     
  1242  0000                     
  1243  0000                     
  1244  0000                     
  1245  0000                     
  1246  0000                     
  1247  00A3                     _G_Hybrid
  1248  00A3                     	ds	1
  1249  00A4                     _G_LimitROF
  1250  00A4                     	ds	1
  1251  00A5                     _G_RampIt
  1252  00A5                     	ds	1
  1253  00A6                     _G_Ramping
  1254  00A6                     	ds	1
  1255  00A7                     _G_ShotBuffer
  1256  00A7                     	ds	1
  1257  0000                     
  1258  0000                     
  1259  0000                     
  1260  0000                     
  1261  0000                     
  1262  0000                     
  1263  0000                     
  1264  0000                     
  1265  0000                     
  1266  0000                     
  1267  0000                     
  1268  0000                     
  1269  0000                     
  1270  0000                     
  1271  0000                     
  1272  0000                     
  1273  0000                     
  1274  0000                     
  1275  0000                     
  1276  0000                     
  1277  0000                     
  1278  0000                     
  1279  0000                     
  1280  0000                     
  1281  0000                     
  1282  00A8                     F425
  1283  00A8                     	ds	2
  1284  00AA                     F428
  1285  00AA                     	ds	3
  1286  00AD                     _G_Last_Pull
  1287  00AD                     	ds	4
  1288  00B1                     _G_Last_Shot
  1289  00B1                     	ds	4
  1290  00B5                     _G_Next_Shot
  1291  00B5                     	ds	4
  1292  00B9                     _G_Trigger_FP
  1293  00B9                     	ds	4
  1294                           
  1295                           	psect	temp
  1296  0070                     btemp
  1297  0070                     	ds	8


HI-TECH Software PICC Macro Assembler V9.50PL2
Symbol Table                                          Tue Aug 11 23:56:15 2009

              ?a_Cycle 003F                      l3 0467  
                    l7 0625                      l9 048D  
               _ACTION 0896        _Cycle_BreakBeam 0377  
                   l20 053B                     l21 053A  
                   l13 058A                     l15 0524  
                   l16 0515                     l41 0307  
                   l25 0569                     l34 059A  
                   l26 055C                     l43 034A  
                   l35 0598                     l19 0588  
                   l28 0578                     l53 03FA  
                   l45 0446                     l46 0444  
                   l38 0624                     l55 043D  
                   l47 0442                     l48 0408  
                   l49 03BD                     u35 0475  
            _G_Ramping 00A6                    F430 00A2  
                  F425 00A8                    F426 00A0  
                  F427 00A1                    F428 00AA  
           _G_LimitROF 00A4                 _G_Mode 0023  
                  u230 057F                    u400 0318  
                  u325 061F                    u415 038F  
                  u505 0437                    u345 02F7  
                  u370 0300                    u381 0315  
                  u285 05C6                    u475 03CB  
                  u495 03EE                    u496 03F5  
     __EYEPOWER_ON_PTR 00C3            _G_Last_Shot 00B1  
          _G_Last_Pull 00AD                   f1723 0045  
              _G_Dwell 002D            _G_Next_Shot 00B5  
          _G_TickCount 0033                   aldiv 073F  
                 _wait 08B6                   btemp 0070  
                 lldiv 0775                   ftmul 068E  
                 fttol 06CF        __DIP1_ISSET_PTR 00BD  
       ?a_TRIGGER_ISUP 004B          ?_TRIGGER_ISUP 0049  
    ?a_Cycle_BreakBeam 003B               _G_Eye_On 00C8  
  ?a_TRIGGER_FIRSTPULL 0045                  ?_wait 0046  
             _G_RampIt 00A5               _G_Hybrid 00A3  
        _G_Eye_Waiting 00C9                  _G_AMB 0027  
                _G_BIP 0029                  _G_FMD 0022  
                _G_BPS 00C5                  _G_ROF 0026  
                _Cycle 02BD                code_ptr 0051  
          string_table 00A0                  lbtoft 063C  
                lltoft 06F7                  status 0003  
         _G_ShotBuffer 00A7      _TRIGGER_FIRSTPULL 047E  
        _G_Current_ROF 00C6           _TRIGGER_ISUP 0448  
         used_code_ptr 0001             _G_Debounce 002B  
           used_btemp0 0001             used_btemp1 0001  
           used_btemp2 0001             used_btemp3 0001  
           used_btemp4 0001             used_btemp5 0001  
           used_btemp6 0001             used_btemp7 0001  
         _G_Trigger_FP 00B9  
